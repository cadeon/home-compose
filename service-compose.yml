# All the other services
version: "3.7"

services:
  
  rickroll:
    image: modem7/docker-rickroll
    container_name: Rickroll
    ports:
      - 1987:8080
    environment:
      - TITLE="not-really-roll" # Changes the title of the webpage
    networks:
      - traefik-public
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.rr.entryPoints=websecure"
      - "traefik.http.routers.rr.tls.certResolver=letsEncrypt"
      - "traefik.http.routers.rr.rule=Host(`rr.not-really.me`)" # Edit here to change the domain name
      - "traefik.http.services.rr.loadbalancer.server.port=8080"
      - "traefik.docker.network=traefik-public"
    restart: unless-stopped

  searxng:
    image: docker.io/searxng/searxng:latest
    container_name: searxng
    ports:
      - 1234:8080
    volumes:
      - /volume2/docker-configs/searxng:/etc/searxng:rw
    environment:
      - PUID=1000
      - PGID=100
      - TZ=America/New_York
      - SEARXNG_BASE_URL=https://search.not-really.me/
    logging:
      driver: "json-file"
      options:
        max-size: "1m"
        max-file: "1"
    healthcheck:
      test: ["NONE"]
    networks:
      - traefik-public
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.search.entryPoints=websecure"
      - "traefik.http.routers.search.tls.certResolver=letsEncrypt"
      - "traefik.http.routers.search.rule=Host(`search.not-really.me`)" # Edit here to change the domain name
      - "traefik.http.services.search.loadbalancer.server.port=8080"
      - "traefik.docker.network=traefik-public"
    restart: unless-stopped
  
  mcp-searxng:
    image: isokoliuk/mcp-searxng:latest
    container_name: mcp-searxng
    environment:
      - SEARXNG_URL=https://search.not-really.me/
      - MCP_HTTP_PORT=3000
    ports:
      - 3000:3000
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.mcp.entryPoints=websecure"
      - "traefik.http.routers.mcp.tls.certResolver=letsEncrypt"
      - "traefik.http.routers.mcp.rule=Host(`mcp.not-really.me`)"
      - "traefik.http.services.mcp.loadbalancer.server.port=3000"
      - "traefik.docker.network=traefik-public"
    networks:
      - traefik-public
    restart: unless-stopped


  syncthing:
    image: lscr.io/linuxserver/syncthing:latest
    container_name: syncthing
    hostname: sync.not-really.me
    environment:
      - PUID=1000
      - PGID=100
      - TZ=America/New_York
    volumes:
      - /volume2/docker-configs/syncthing/config:/config
      - /volume1:/volume1
    ports:
      - 8384:8384
      - 22000:22000/tcp
      - 22000:22000/udp
      - 21027:21027/udp
    networks:
      - traefik-public
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.sync.entryPoints=websecure"
      - "traefik.http.routers.sync.tls.certResolver=letsEncrypt"
      - "traefik.http.routers.sync.rule=Host(`sync.not-really.me`)" # Edit here to change the domain name
      - "traefik.http.services.sync.loadbalancer.server.port=8384"
      - "traefik.docker.network=traefik-public"
      - "traefik.port=8384"
    restart: unless-stopped

  calibre-web:
    image: lscr.io/linuxserver/calibre-web:latest
    container_name: calibre-web
    environment:
      - PUID=1000
      - PGID=100
      - TZ=America/New_York
      - DOCKER_MODS=linuxserver/mods:universal-calibre #optional
      - OAUTHLIB_RELAX_TOKEN_SCOPE=1 #optional
    volumes:
      - /volume2/docker-configs/calibre-web/config:/config
      - /volume1/files/books/:/books
    networks:
      - traefik-public
    ports:
      - 8083:8083
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.books.entryPoints=websecure"
      - "traefik.http.routers.books.tls.certResolver=letsEncrypt"
      - "traefik.http.routers.books.rule=Host(`books.not-really.me`)" # Edit here to change the domain name
      - "traefik.http.services.books.loadbalancer.server.port=8083"
      - "traefik.docker.network=traefik-public"
      - "traefik.port=8083"
    restart: unless-stopped

  utfodem:
    image: cadeon924/utfodem:latest
    container_name: utfodem
    networks:
      - traefik-public
    ports:
      - 12345:8000
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.utfodem.entryPoints=websecure"
      - "traefik.http.routers.utfodem.tls.certResolver=letsEncrypt"
      - "traefik.http.routers.utfodem.rule=Host(`cypher.not-really.me`)" # Edit here to change the domain name
      - "traefik.http.services.utfodem.loadbalancer.server.port=8000"
      - "traefik.docker.network=traefik-public"
    restart: unless-stopped
 
  copyparty:
    image: copyparty/ac:latest
    container_name: copyparty
    user: "1000:100"
    ports:
      - 3923:3923
    volumes:
      - /volume2/docker-configs/copyparty:/cfg
      - /volume1/files/public:/files/public
      - /volume1/plex-media:/files/plex-media
      - /volume1/files/warez:/files/warez
      - /volume1/files/imgs/imgs:/files/imgs

    environment:
      LD_PRELOAD: /usr/lib/libmimalloc-secure.so.2
      # enable mimalloc by replacing "NOPE" with "2" for a nice speed-boost (will use twice as much ram)

      PYTHONUNBUFFERED: 1
      # ensures log-messages are not delayed (but can reduce speed a tiny bit)

    stop_grace_period: 15s  # thumbnailer is allowed to continue finishing up for 10s after the shutdown signal
    healthcheck:
      # hide it from logs with "/._" so it matches the default --lf-url filter 
      test: ["CMD-SHELL", "wget --spider -q 127.0.0.1:3923/?reset=/._"]
      interval: 1m
      timeout: 2s
      retries: 5
      start_period: 15s
    networks:
      - traefik-public
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.copyparty.entryPoints=websecure"
      - "traefik.http.routers.copyparty.tls.certResolver=letsEncrypt"
      - "traefik.http.routers.copyparty.rule=Host(`files.not-really.me`)" # Edit here to change the domain name
      - "traefik.http.services.copyparty.loadbalancer.server.port=3923"
      - "traefik.docker.network=traefik-public"

###### ----- Docker control ----- ######
networks:
  traefik-public:
    external: true
    driver: bridge

volumes:
  postgresdata:
